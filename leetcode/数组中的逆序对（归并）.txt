在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组，求出这个数组中的逆序对的总数。

 

示例 1:

输入: [7,5,6,4]
输出: 5
 

限制：

0 <= 数组长度 <= 50000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。






class Solution {
    int pairs;
    public int reversePairs(int[] nums) {
        int[] temp = new int[nums.length];
        mergeSort(nums, 0, nums.length-1, temp);
        return pairs;
    }
    public void mergeSort(int[] nums, int low, int high, int[] temp){
        if(low<high){
            int mid = (low+high)/2;
            mergeSort(nums, low, mid, temp);
            mergeSort(nums, mid+1, high, temp);
            merge(nums, low, mid, high, temp);
        }
    }
    public void merge(int[] nums, int low, int mid, int high, int[] temp){
        int i=low, j=mid+1, k=0;
        while(i<=mid && j<=high){
            if(nums[i] > nums[j]){
                temp[k++] = nums[j++];
                pairs += mid-i + 1;
            }else{
                temp[k++] = nums[i++];
            }
        }
        while(i <= mid){
            temp[k++] = nums[i++];
        }
        while(j <=high){
            temp[k++] = nums[j++];
        }
        for(int t=0;t<k;t++){
			nums[low+t] = temp[t];
		}
    }
}