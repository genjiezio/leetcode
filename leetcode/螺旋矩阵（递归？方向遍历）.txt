给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。

 

示例 1：


输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]
输出：[1,2,3,6,9,8,7,4,5]
示例 2：


输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
输出：[1,2,3,4,8,12,11,10,9,5,6,7]
 

提示：

m == matrix.length
n == matrix[i].length
1 <= m, n <= 10
-100 <= matrix[i][j] <= 100

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/spiral-matrix
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。








class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int[][] dire = {{0,1}, {1,0}, {0, -1}, {-1,0}}; //方向数组
        List<Integer> list = new ArrayList<Integer>();
        int row = 0;
        int column = 0;
        int k = 0;
        int m = matrix.length;
        int n = matrix[0].length;
        while(true){
            while(row < m && row>=0 && column >=0 && column < n && matrix[row][column] < 101){
                list.add(matrix[row][column]);
                matrix[row][column] = 101;
                row += dire[k][0];
                column += dire[k][1];
            }
            row -= dire[k][0];
            column -= dire[k][1];
            k = (k+1)%4;
            row += dire[k][0];
            column += dire[k][1];
            if(list.size() == m*n) break;
        }
        return list;
    }
}