给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。

注意：答案中不可以包含重复的四元组。

 

示例 1：

输入：nums = [1,0,-1,0,-2,2], target = 0
输出：[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]
示例 2：

输入：nums = [], target = 0
输出：[]
 

提示：

0 <= nums.length <= 200
-109 <= nums[i] <= 109
-109 <= target <= 109

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/4sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。



解法： 套用3数和的解法


class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> lists = new ArrayList<>();
        if(nums.length == 0 || nums.length < 4) return lists;
        Arrays.sort(nums);
        for(int i=0;i<nums.length-3;i++){
            if(i>0 && nums[i]==nums[i-1]) continue;
            int target2 = target-nums[i];
            for(int j=i+1;j<nums.length-2;j++){
                if(j>i+1 && nums[j] == nums[j-1]) continue;
                int target3 = target2-nums[j];
                int left = j+1, right = nums.length-1;
                while(left<right){
                    if(nums[left]+nums[right] == target3){
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[left]);list.add(nums[right]);
                        list.add(nums[i]);list.add(nums[j]);
                        lists.add(list);
                        left++;right--;
                        while(left<right && nums[left]==nums[left-1]) left++;
                        while(left<right && nums[right]==nums[right+1]) right--;
                    }else if(nums[left]+nums[right] < target3){
                        left++;
                    }else{
                        right--;
                    }
                }
            }
        }
        return lists;
    }
}
