给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。

 

示例 1：


输入：n = 3
输出：[[1,2,3],[8,9,4],[7,6,5]]
示例 2：

输入：n = 1
输出：[[1]]
 

提示：

1 <= n <= 20

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/spiral-matrix-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


思路：参见螺旋矩阵1




class Solution {
    public int[][] generateMatrix(int n) {
        int[][] matrix = new int[n][n];
        if(n == 1){
            return new int[][]{{1}};
        }
        int[][] dire = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        int k = 0;
        int cloumn = 0;
        int row = 0;
        int poi = 1;
        while(poi <= n*n){
            while(row >=0 && row < n && cloumn >=0 && cloumn < n && matrix[row][cloumn] == 0){
                matrix[row][cloumn] = poi;
                poi++;
                row += dire[k][0];
                cloumn += dire[k][1];
            }
            row -= dire[k][0];
            cloumn -= dire[k][1];
            k = (k+1)%4;
            row += dire[k][0];
            cloumn += dire[k][1];
        }
        return matrix;
    }
}